for-to-do loop:
	search pattern:
	for:b+{[^\:]+}:b*\:=:b*{[^:b]+}:b+to:b+{[^:b]+}:b+do{.*}
	replace pattern
	for (\1=\2; \1<=\3; \1++) \4 //delphi--> \0
	
fot-downto-do loop
	search pattern:
	for:b+{[^\:]+}:b*\:=:b*{[^:b]+}:b+downto:b+{[^:b]+}:b+do{.*}
	replace pattern:
	for (\1=\2; \1>=\3; \1--) \4 //delphi--> \0
	
if statement
	search pattern:
	if:b*\(*{[^\)]+}\):b+then{.*}
	replace pattern:
	if (\1) then\2 //delphi--> \0